{"version":3,"sources":["components/Loader/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PerosnLink","person","setIsActiveRow","isActiveRow","name","sex","born","died","mother","father","fatherName","motherName","slug","classNames","to","onClick","PeopleTable","peopleList","useState","map","item","i","length","PeoplePage","setPeopleList","isError","setIsError","isLoad","setIsLoad","useEffect","data","catch","finally","NotFoundPage","NavBar","role","isActive","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.96285e1d.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  setIsActiveRow: (arg: string) => void,\n  isActiveRow: string,\n};\n\nexport const PerosnLink: React.FC<Props> = ({\n  person,\n  setIsActiveRow,\n  isActiveRow,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': isActiveRow === slug })}\n    >\n      <td>\n        <NavLink\n          to={`#/${slug}`}\n          className={(sex === 'f' ? 'has-text-danger' : '')}\n          onClick={() => setIsActiveRow(slug)}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {mother ? (\n        <td>\n          <Link\n            className=\"has-text-danger\"\n            to={`#/${mother.slug}`}\n            onClick={() => setIsActiveRow(mother.slug)}\n          >\n            {mother.name}\n          </Link>\n        </td>\n      ) : (\n        <td>{motherName || '-' }</td>\n      )}\n\n      {father ? (\n        <td>\n          <Link\n            to={`#/${father.slug}`}\n            onClick={() => setIsActiveRow(father.slug)}\n          >\n            {father.name}\n          </Link>\n        </td>\n      ) : (\n        <td>{fatherName || '-'}</td>\n      )}\n    </tr>\n  );\n};\n","import { useState } from 'react';\nimport { Person } from '../../types';\nimport { PerosnLink } from '../PersonLink';\n\ntype Props = {\n  peopleList: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ peopleList }) => {\n  const [isActiveRow, setIsActiveRow] = useState('');\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleList.map((item) => {\n          const person = { ...item };\n\n          if (item.fatherName || item.motherName) {\n            for (let i = 0; i < peopleList.length; i += 1) {\n              if (peopleList[i].name === item.fatherName) {\n                person.father = peopleList[i];\n              }\n\n              if (peopleList[i].name === item.motherName) {\n                person.mother = peopleList[i];\n              }\n            }\n          }\n\n          return (\n            <PerosnLink\n              person={person}\n              key={person.slug}\n              setIsActiveRow={setIsActiveRow}\n              isActiveRow={isActiveRow}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [peopleList, setPeopleList] = useState<Person[] | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoad, setIsLoad] = useState(false);\n\n  const getPeopleList = () => {\n    setIsLoad(true);\n\n    getPeople()\n      .then((data) => setPeopleList(data))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoad(false));\n  };\n\n  useEffect(() => {\n    getPeopleList();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoad && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {peopleList && (\n            <PeopleTable peopleList={peopleList} />\n          )}\n\n          {peopleList?.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/Loader/HomePage';\n\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}